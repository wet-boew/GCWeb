name: Build for Github Pages

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use NodeJS
        uses: actions/setup-node@v4
        with:
          cache: 'npm'

      - name: Install Grunt
        run: npm i -g grunt-cli --force

      - name: Install npm dependencies
        run: npm ci --ignore-scripts

      # Related to GCWeb#1737 about wet-boew#cc340a6 commit
      - name: Copy the missing _sprite_share.scss file
        run: |
          curl https://gist.githubusercontent.com/duboisp/d69787b300eb1f4d40f937508e10d013/raw/86e7a0b15ad6a695754599e9793e986b460bf514/_sprites_share.scss >> _sprites_share.scss
          mv _sprites_share.scss node_modules/wet-boew/src/plugins/share/sprites/_sprites_share.scss

      - name: Build GCWeb
        run: grunt build-gh-pages

      # Overwrite all layout and includes and remove dist from .gitignore
      - name: Update GCWeb Jekyll theme files
        run: |
          cp -R ~jekyll-dist/_includes/* _includes/
          cp -R ~jekyll-dist/_layouts/* _layouts/
          sed -i '/^_wetboew-demos\/$/s/^/#/' .gitignore
          sed -i '/^méli-mélo-demos\/$/s/^/#/' .gitignore
          mv _wetboew-demos wetboew-demos

      # Necessary in order to build Jekyll
      - name: Setup Ruby
        uses: ruby/setup-ruby@472790540115ce5bd69d399a020189a8c87d641f # v1.247.0
        with:
          ruby-version: '3.3'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      # Necessary for Github pages (when not publishing to gh-pages)
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # Generate all the Jekyll files and push to ./_site
      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      # Zip the ./_site/ folder as an artifact
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site/

  # Publish the artifact to Github Pages
  deploy:
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
